[{"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/index.tsx":"1","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/routes/Routes.tsx":"2","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/components/Tooltip/styles.ts":"3","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/hooks/Auth.tsx":"4","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/hooks/index.tsx":"5","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/components/Input/styles.ts":"6","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/Dashboard/styles.ts":"7","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/SignUp/index.tsx":"8","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/SignIn/index.tsx":"9","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/Dashboard/index.tsx":"10","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/hooks/Toast.tsx":"11","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/components/Tooltip/index.tsx":"12","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/components/Input/index.tsx":"13","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/routes/index.tsx":"14","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/Profile/index.tsx":"15","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/Profile/styles.tsx":"16","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/Reset/index.tsx":"17","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/ForgotPassword/index.tsx":"18"},{"size":198,"mtime":1607193632176,"results":"19","hashOfConfig":"20"},{"size":799,"mtime":1608468202597,"results":"21","hashOfConfig":"20"},{"size":742,"mtime":1607859892429,"results":"22","hashOfConfig":"23"},{"size":2139,"mtime":1616339113316,"results":"24","hashOfConfig":"25"},{"size":271,"mtime":1608408551418,"results":"26","hashOfConfig":"20"},{"size":1156,"mtime":1607860049964,"results":"27","hashOfConfig":"20"},{"size":4714,"mtime":1616337663232,"results":"28","hashOfConfig":"25"},{"size":2979,"mtime":1616240785029,"results":"29","hashOfConfig":"20"},{"size":2816,"mtime":1618673990043,"results":"30","hashOfConfig":"23"},{"size":7381,"mtime":1616338121884,"results":"31","hashOfConfig":"25"},{"size":1426,"mtime":1608468749869,"results":"32","hashOfConfig":"25"},{"size":344,"mtime":1607859238219,"results":"33","hashOfConfig":"25"},{"size":1632,"mtime":1616337580463,"results":"34","hashOfConfig":"25"},{"size":799,"mtime":1616337723533,"results":"35","hashOfConfig":"25"},{"size":5215,"mtime":1616340445008,"results":"36","hashOfConfig":"25"},{"size":1646,"mtime":1616339652066,"results":"37","hashOfConfig":"25"},{"size":2924,"mtime":1616240204729,"results":"38","hashOfConfig":"25"},{"size":2841,"mtime":1616062693976,"results":"39","hashOfConfig":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ziyonc",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qnbhbr",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11isnxl",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/index.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/routes/Routes.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/components/Tooltip/styles.ts",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/hooks/Auth.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/hooks/index.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/components/Input/styles.ts",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/Dashboard/styles.ts",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/SignUp/index.tsx",["78"],"import React, { useCallback, useRef } from 'react';\nimport { FiMail, FiLock, FiUser, FiArrowLeft } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { FormHandles } from '@unform/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container, Content, Background, AnimationContainer } from './styles';\n\nimport logo from '../../assets/logo.svg';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport getValidationErros from '../../utils/getValidationErros';\nimport api from '../../services/api';\nimport { useToast } from '../../hooks/Toast';\n\ninterface SignInFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .email('Digite um e-mail válido')\n            .required('E-mail é obrigatório'),\n          password: Yup.string().min(6, 'No mínimo 6 digitos'),\n        });\n\n        await schema.validate(data, { abortEarly: false });\n\n        await api\n          .post('users', {\n            name: data.name,\n            email: data.email,\n            password: data.password,\n          })\n          .then(response => {\n            addToast({ type: 'success', title: 'Cadastro realizado' });\n\n            history.push('/');\n          });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const erros = getValidationErros(err);\n\n          formRef.current?.setErrors(erros);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro ao cadastrar',\n          description: 'Ocorreu um erro ao fazer o cadastro, tente novamente',\n        });\n      }\n    },\n    [addToast, history],\n  );\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <AnimationContainer>\n          <img src={logo} alt=\"GoBarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu cadastro</h1>\n\n            <Input name=\"name\" icon={FiUser} type=\"text\" placeholder=\"Nome\" />\n            <Input\n              name=\"email\"\n              icon={FiMail}\n              type=\"text\"\n              placeholder=\"E-mail\"\n            />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button type=\"submit\">Cadastrar</Button>\n          </Form>\n\n          <Link to=\"/\">\n            <FiArrowLeft />\n            Voltar para o login\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/SignIn/index.tsx",["79"],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/Dashboard/index.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/hooks/Toast.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/components/Tooltip/index.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/components/Input/index.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/routes/index.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/Profile/index.tsx",["80"],"import React, { ChangeEvent, useCallback, useRef } from 'react';\nimport { FiUser, FiMail, FiLock, FiCamera, FiArrowLeft } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport { useAuth } from '../../hooks/Auth';\nimport { useToast } from '../../hooks/Toast';\n\nimport getValidationErrors from '../../utils/getValidationErros';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, AvatarInput } from './styles';\n\nimport notFoundImg from '../../assets/no-avatar.png';\n\ninterface ProfileFormData {\n  name: string;\n  email: string;\n  old_password: string;\n  password: string;\n  password_confirmation: string;\n}\n\nconst Profile: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const { user, updateUser } = useAuth();\n\n  console.log(user);\n\n  const handleSubmit = useCallback(\n    async (data: ProfileFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n          old_password: Yup.string(),\n          password: Yup.string().when('old_password', {\n            is: (val: string | unknown[]) => !!val.length,\n            then: Yup.string().required('Campo obrigatório'),\n            otherwise: Yup.string(),\n          }),\n          password_confirmation: Yup.string()\n            .when('old_password', {\n              is: (val: string | unknown[]) => !!val.length,\n              then: Yup.string().required('Campo obrigatório'),\n              otherwise: Yup.string(),\n            })\n            .oneOf([Yup.ref('password')], 'Confirmação incorreta'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        const {\n          name,\n          email,\n          old_password,\n          password,\n          password_confirmation,\n        } = data;\n\n        const formData = {\n          name,\n          email,\n          ...(old_password\n            ? {\n                old_password,\n                password,\n                password_confirmation,\n              }\n            : {}),\n        };\n\n        const response = await api.put('/profile', formData);\n\n        updateUser(response.data);\n\n        history.push('/dashboard');\n\n        addToast({\n          type: 'success',\n          title: 'Perfil atualizado!',\n          description:\n            'As informações do seu perfil foram atualizadas com sucesso!',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na atualização',\n          description: 'Ocorreu um erro ao atualizar perfil, tente novamente',\n        });\n      }\n    },\n    [addToast, history, updateUser],\n  );\n\n  const handleAvatarChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      if (e.target.files) {\n        const data = new FormData();\n\n        data.append('avatar', e.target.files[0]);\n\n        api.patch('/users/avatar', data).then(response => {\n          updateUser(response.data);\n\n          addToast({\n            type: 'success',\n            title: 'Avatar atualizado!',\n          });\n        });\n      }\n    },\n    [addToast, updateUser],\n  );\n\n  return (\n    <Container>\n      <header>\n        <div>\n          <Link to=\"/dashboard\">\n            <FiArrowLeft />\n          </Link>\n        </div>\n      </header>\n\n      <Content>\n        <Form\n          ref={formRef}\n          initialData={{\n            name: user.name,\n            email: user.email,\n          }}\n          onSubmit={handleSubmit}\n        >\n          <AvatarInput>\n            <img src={user.avatar_url ?? notFoundImg} alt={user.name} />\n            <label htmlFor=\"avatar\">\n              <FiCamera />\n\n              <input type=\"file\" id=\"avatar\" onChange={handleAvatarChange} />\n            </label>\n          </AvatarInput>\n\n          <h1>Meu perfil</h1>\n\n          <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n          <Input\n            containerStyle={{ marginTop: 24 }}\n            name=\"old_password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha atual\"\n          />\n\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Nova senha\"\n          />\n\n          <Input\n            name=\"password_confirmation\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Confirmar senha\"\n          />\n\n          <Button type=\"submit\">Confirmar mudanças</Button>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Profile;\n","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/Profile/styles.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/Reset/index.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/ForgotPassword/index.tsx",[],{"ruleId":"81","severity":1,"message":"82","line":48,"column":17,"nodeType":"83","messageId":"84","endLine":48,"endColumn":25},{"ruleId":"81","severity":1,"message":"85","line":21,"column":11,"nodeType":"83","messageId":"84","endLine":21,"endColumn":20},{"ruleId":"86","severity":1,"message":"87","line":37,"column":3,"nodeType":"88","messageId":"89","endLine":37,"endColumn":14},"@typescript-eslint/no-unused-vars","'response' is defined but never used.","Identifier","unusedVar","'IResponse' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected"]