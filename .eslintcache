[{"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/index.tsx":"1","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/routes/Routes.tsx":"2","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/components/Tooltip/styles.ts":"3","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/hooks/Auth.tsx":"4","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/hooks/index.tsx":"5","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/components/Input/styles.ts":"6","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/Dashboard/styles.ts":"7","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/SignUp/index.tsx":"8","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/SignIn/index.tsx":"9","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/Dashboard/index.tsx":"10","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/hooks/Toast.tsx":"11","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/components/Tooltip/index.tsx":"12"},{"size":198,"mtime":1607193632176,"results":"13","hashOfConfig":"14"},{"size":799,"mtime":1608468202597,"results":"15","hashOfConfig":"14"},{"size":742,"mtime":1607859892429,"results":"16","hashOfConfig":"17"},{"size":1844,"mtime":1616243401443,"results":"18","hashOfConfig":"14"},{"size":271,"mtime":1608408551418,"results":"19","hashOfConfig":"14"},{"size":1156,"mtime":1607860049964,"results":"20","hashOfConfig":"14"},{"size":4629,"mtime":1616243704171,"results":"21","hashOfConfig":"14"},{"size":2979,"mtime":1616240785029,"results":"22","hashOfConfig":"14"},{"size":2990,"mtime":1616240819140,"results":"23","hashOfConfig":"14"},{"size":7167,"mtime":1616334834398,"results":"24","hashOfConfig":"17"},{"size":1426,"mtime":1608468749869,"results":"25","hashOfConfig":"17"},{"size":344,"mtime":1607859238219,"results":"26","hashOfConfig":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ziyonc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11isnxl",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/index.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/routes/Routes.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/components/Tooltip/styles.ts",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/hooks/Auth.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/hooks/index.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/components/Input/styles.ts",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/Dashboard/styles.ts",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/SignUp/index.tsx",["52"],"import React, { useCallback, useRef } from 'react';\nimport { FiMail, FiLock, FiUser, FiArrowLeft } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { FormHandles } from '@unform/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Container, Content, Background, AnimationContainer } from './styles';\n\nimport logo from '../../assets/logo.svg';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport getValidationErros from '../../utils/getValidationErros';\nimport api from '../../services/api';\nimport { useToast } from '../../hooks/Toast';\n\ninterface SignInFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .email('Digite um e-mail válido')\n            .required('E-mail é obrigatório'),\n          password: Yup.string().min(6, 'No mínimo 6 digitos'),\n        });\n\n        await schema.validate(data, { abortEarly: false });\n\n        await api\n          .post('users', {\n            name: data.name,\n            email: data.email,\n            password: data.password,\n          })\n          .then(response => {\n            addToast({ type: 'success', title: 'Cadastro realizado' });\n\n            history.push('/');\n          });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const erros = getValidationErros(err);\n\n          formRef.current?.setErrors(erros);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro ao cadastrar',\n          description: 'Ocorreu um erro ao fazer o cadastro, tente novamente',\n        });\n      }\n    },\n    [addToast, history],\n  );\n\n  return (\n    <Container>\n      <Background />\n      <Content>\n        <AnimationContainer>\n          <img src={logo} alt=\"GoBarber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu cadastro</h1>\n\n            <Input name=\"name\" icon={FiUser} type=\"text\" placeholder=\"Nome\" />\n            <Input\n              name=\"email\"\n              icon={FiMail}\n              type=\"text\"\n              placeholder=\"E-mail\"\n            />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button type=\"submit\">Cadastrar</Button>\n          </Form>\n\n          <Link to=\"/\">\n            <FiArrowLeft />\n            Voltar para o login\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/SignIn/index.tsx",["53","54"],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/pages/Dashboard/index.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/hooks/Toast.tsx",[],"/home/aldo/Documents/Projetos-Rockeseat/06-gobarber-web/src/components/Tooltip/index.tsx",[],{"ruleId":"55","severity":1,"message":"56","line":48,"column":17,"nodeType":"57","messageId":"58","endLine":48,"endColumn":25},{"ruleId":"55","severity":1,"message":"59","line":21,"column":11,"nodeType":"57","messageId":"58","endLine":21,"endColumn":20},{"ruleId":"55","severity":1,"message":"56","line":48,"column":11,"nodeType":"57","messageId":"58","endLine":48,"endColumn":19},"@typescript-eslint/no-unused-vars","'response' is defined but never used.","Identifier","unusedVar","'IResponse' is defined but never used."]